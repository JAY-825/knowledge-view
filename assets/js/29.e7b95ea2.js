(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{300:function(v,t,e){"use strict";e.r(t);var a=e(14),_=Object(a.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"vue2特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue2特性"}},[v._v("#")]),v._v(" vue2特性")]),v._v(" "),t("blockquote",[t("p",[v._v("vue作者：尤雨溪")])]),v._v(" "),t("h2",{attrs:{id:"vue介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue介绍"}},[v._v("#")]),v._v(" vue介绍")]),v._v(" "),t("p",[v._v("Vue.js（/vjuː/，或简称为Vue）是一个用于创建用户界面的开源JavaScript框架，也是一个创建单页应用的Web应用框架。2016年一项针对JavaScript的调查表明，Vue有着89%的开发者满意度。在GitHub上，该项目平均每天能收获95颗星，为Github有史以来星标数第3多的项目同时也是一款流行的JavaScript前端框架，旨在更好地组织与简化Web开发。Vue所关注的核心是MVC模式中的视图层，同时，它也能方便地获取数据更新，并通过组件内部特定的方法实现视图与模型的交互。")]),v._v(" "),t("h2",{attrs:{id:"核心特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心特性"}},[v._v("#")]),v._v(" 核心特性")]),v._v(" "),t("h3",{attrs:{id:"数据驱动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据驱动"}},[v._v("#")]),v._v(" 数据驱动")]),v._v(" "),t("p",[t("strong",[v._v("数据驱动(MVVM)")])]),v._v(" "),t("p",[t("code",[v._v("MVVM")]),v._v("即模型-视图-视图模型(Model-View-ViewModel)")]),v._v(" "),t("ul",[t("li",[v._v("Model：模型层，负责处理业务逻辑以及和服务器端进行交互")]),v._v(" "),t("li",[v._v("View：视图层：负责将数据模型转化为UI展示出来，可以简单的理解为HTML页面")]),v._v(" "),t("li",[v._v("ViewModel：视图模型层，用来连接Model和View，是Model和View之间的通信桥梁")])]),v._v(" "),t("h3",{attrs:{id:"指令化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指令化"}},[v._v("#")]),v._v(" 指令化")]),v._v(" "),t("p",[v._v("指令能够让我们更好的专注数据和逻辑，减少操作DOM")]),v._v(" "),t("blockquote",[t("p",[v._v("指令 (Directives) 是带有 v- 前缀的特殊属性作用：当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM")])]),v._v(" "),t("p",[t("strong",[v._v("常用指令")])]),v._v(" "),t("ul",[t("li",[v._v("条件显隐指令 "),t("code",[v._v("v-show")])]),v._v(" "),t("li",[v._v("条件渲染指令 "),t("code",[v._v("v-if")])]),v._v(" "),t("li",[v._v("列表渲染指令 "),t("code",[v._v("v-for")])]),v._v(" "),t("li",[v._v("属性绑定指令 "),t("code",[v._v("v-bind")])]),v._v(" "),t("li",[v._v("事件绑定指令 "),t("code",[v._v("v-on")])]),v._v(" "),t("li",[v._v("双向数据绑定指令 "),t("code",[v._v("v-model")])])]),v._v(" "),t("h3",{attrs:{id:"组件化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件化"}},[v._v("#")]),v._v(" 组件化")]),v._v(" "),t("h4",{attrs:{id:"什么是组件化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是组件化"}},[v._v("#")]),v._v(" 什么是组件化")]),v._v(" "),t("blockquote",[t("p",[v._v("组件化开发就是把各种逻辑均抽象为一个统一的概念（组件）来实现开发的模式")])]),v._v(" "),t("h4",{attrs:{id:"组件化优势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件化优势"}},[v._v("#")]),v._v(" 组件化优势")]),v._v(" "),t("ul",[t("li",[v._v("降低代码耦合")]),v._v(" "),t("li",[v._v("功能抽离整合，能够在项目中复用，提高功能代码维护性")])]),v._v(" "),t("h2",{attrs:{id:"vue与传统开发区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue与传统开发区别"}},[v._v("#")]),v._v(" vue与传统开发区别")]),v._v(" "),t("p",[v._v("总结：")]),v._v(" "),t("ul",[t("li",[v._v("vue更专注与数据驱动视图，界面变动是根据数据自动绑定出来的。")]),v._v(" "),t("li",[v._v("传统开发更多的是去操作DOM，vue更多的是操作数据。")])]),v._v(" "),t("h2",{attrs:{id:"参考导航"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考导航"}},[v._v("#")]),v._v(" 参考导航")]),v._v(" "),t("ul",[t("li",[t("a",{attrs:{href:""}},[v._v("https://v2.cn.vuejs.org/v2/guide/")])])])])}),[],!1,null,null,null);t.default=_.exports}}]);