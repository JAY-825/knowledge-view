(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{302:function(s,n,a){"use strict";a.r(n);var e=a(14),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"npm包管理工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm包管理工具"}},[s._v("#")]),s._v(" NPM包管理工具")]),s._v(" "),n("p",[n("code",[s._v("npm")]),s._v("是一种包管理工具，它是全球最大的...")]),s._v(" "),n("p",[s._v("注意：node项目所在目录不要包含中文和空格")]),s._v(" "),n("h2",{attrs:{id:"安装npm依赖包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装npm依赖包"}},[s._v("#")]),s._v(" 安装npm依赖包")]),s._v(" "),n("ul",[n("li",[s._v("默认安装（将会安装该依赖包的最新版本）")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm install 包名\n或\nnpm i 包名\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("指定版本号安装")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm install 包名@版本号\n或\nnpm i 包名@版本号\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("全局安装")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm install -global 包名\n或\nnpm i -global 包名\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("区分环境安装")])]),s._v(" "),n("p",[s._v("开发中分为"),n("code",[s._v("开发环境")]),s._v("和"),n("code",[s._v("生产环境")]),s._v("。在项目根目录的"),n("code",[s._v("package.json")]),s._v("文件中，分别对应"),n("code",[s._v("devDependencies")]),s._v("和"),n("code",[s._v("dependencies")]),s._v("节点。项目安装的依赖包也可以到这两个节点查看")]),s._v(" "),n("p",[n("strong",[s._v("初始化项目常见package.json文件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 执行这条语句要选择配置\nnpm init\n\n// 执行这条语句将快速创建，直接默认配置\nnpm init -y\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[n("strong",[s._v("安装到开发节点")])]),s._v(" "),n("p",[s._v("在不指定包安装环境下，通常默认安装在生产环境。而有些依赖包只是在开发阶段起作用，我们应该要安装到开发环境下。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 安装指定的包，并记录到devDependencies节点中\n// 简写形式\nnpm install xxx -D\n// 完整写法\nnpm install xxx --save-dev\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("一般来说，我们上传项目到远程仓库都不会上传node_modules目录。所以通常拉取代码到本地，都没有该依赖包目录，需要手动下载依赖。这时候我们可以一次性安装所有包(package.json中记录的)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm install 或者 npm i\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("当执行命令时，npm会自动读取package.json文件，获得所有的依赖包和版本记录，再一次性下载")])]),s._v(" "),n("p",[n("strong",[s._v("卸载包")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm uninstall 包名\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("卸载命令执行后，npm会自动将卸载的包信息从package.json中的dependencies节点中移除")]),s._v(" "),n("h2",{attrs:{id:"包的分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#包的分类"}},[s._v("#")]),s._v(" 包的分类")]),s._v(" "),n("p",[s._v("包分为"),n("strong",[s._v("项目包")]),s._v("和"),n("strong",[s._v("全局包")])]),s._v(" "),n("p",[n("strong",[s._v("1.项目包")])]),s._v(" "),n("p",[s._v("安装到项目node_module目录中的包，就叫做项目包")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" * 开发依赖包（被记录到devDependencies节点的包，只在开发期间用上）\n * 核心依赖包（被记录到dependencies节点的包，在开发期间和项目上线后都用上）\n")])])]),n("p",[n("strong",[s._v("2.全局包")])]),s._v(" "),n("p",[s._v("执行安装命令npm install时，提供了-g参数，则会把把安装成全局")]),s._v(" "),n("h2",{attrs:{id:"npm包的语义化版本规范"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm包的语义化版本规范"}},[s._v("#")]),s._v(" npm包的语义化版本规范")]),s._v(" "),n("blockquote",[n("p",[s._v("包的版本号是以“点分十进制”形式进行定义的，总共有三部分数字组成，如2.24.0")])]),s._v(" "),n("ol",[n("li",[s._v("第一位数字：大版本")]),s._v(" "),n("li",[s._v("第二位数字：功能版本")]),s._v(" "),n("li",[s._v("第三位数字：Bug修复版本")])]),s._v(" "),n("p",[s._v("版本号提升规则：只要前面的版本号增长了，后面的版本号就需要归零")])])}),[],!1,null,null,null);n.default=t.exports}}]);