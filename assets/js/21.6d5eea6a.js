(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{292:function(v,_,t){"use strict";t.r(_);var l=t(14),e=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"js的数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#js的数据类型"}},[v._v("#")]),v._v(" js的数据类型")]),v._v(" "),_("h2",{attrs:{id:"数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[v._v("#")]),v._v(" 数据类型")]),v._v(" "),_("p",[v._v("js中根据数据存储的位置不同，将数据分为"),_("code",[v._v("基本类型")]),v._v("和"),_("code",[v._v("复杂类型")])]),v._v(" "),_("p",[_("strong",[v._v("基本类型")])]),v._v(" "),_("ul",[_("li",[v._v("Number")]),v._v(" "),_("li",[v._v("String")]),v._v(" "),_("li",[v._v("Boolean")]),v._v(" "),_("li",[v._v("Undefined")]),v._v(" "),_("li",[v._v("null")]),v._v(" "),_("li",[v._v("symbol")])]),v._v(" "),_("p",[_("strong",[v._v("复杂类型")])]),v._v(" "),_("p",[v._v("复杂类型也可以统称为"),_("code",[v._v("Object")]),v._v("，常见讲述的是下面三种：")]),v._v(" "),_("ul",[_("li",[v._v("Object")]),v._v(" "),_("li",[v._v("Array")]),v._v(" "),_("li",[v._v("Function")])]),v._v(" "),_("p",[v._v("除了上述说的三种之外，还包括"),_("code",[v._v("Date")]),v._v("、"),_("code",[v._v("RegExp")]),v._v("、"),_("code",[v._v("Map")]),v._v("、"),_("code",[v._v("Set")]),v._v("等......")]),v._v(" "),_("h2",{attrs:{id:"存储区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#存储区别"}},[v._v("#")]),v._v(" 存储区别")]),v._v(" "),_("p",[v._v("基本数据类型和引用数据类型存储在内存中的位置不同：")]),v._v(" "),_("ul",[_("li",[v._v("基本数据类型存储在栈中")]),v._v(" "),_("li",[v._v("引用类型的对象存储于堆中")])]),v._v(" "),_("p",[_("strong",[v._v("总结")])]),v._v(" "),_("p",[v._v("声明变量时不同的内存地址分配：")]),v._v(" "),_("ul",[_("li",[v._v("简单类型的值存放在栈中，在栈中存放的是对应的值")]),v._v(" "),_("li",[v._v("引用类型对应的值存储在堆中，在栈中存放的是指向堆内存的地址")])]),v._v(" "),_("p",[v._v("不同的类型数据导致赋值变量时的不同：")]),v._v(" "),_("ul",[_("li",[v._v("简单类型赋值，是生成相同的值，两个对象对应不同的地址")]),v._v(" "),_("li",[v._v("复杂类型赋值，是将保存对象的内存地址赋值给另一个变量。也就是两个变量指向堆内存中同一个对象")])])])}),[],!1,null,null,null);_.default=e.exports}}]);